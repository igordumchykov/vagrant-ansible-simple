---
- hosts: webservers
  vars:
    package_name_jdk: java-1.8.0-openjdk-devel
    maven_version: 3.5.3
    maven_src: /usr/local/src
    maven_home: /usr/local/maven
    maven_sh_path: /etc/profile.d/maven.sh
    nexus_version: 3
    nexus_home: /usr/local/nexus
    nexus_src: /usr/local/src/nexus
    java_home_cmd: readlink -f /usr/bin/java | sed "s:/jre/bin/java::"
    nexus_user: nexus
    nexus_group: nexus
    nexus_script: /etc/systemd/system/nexus.service
    nexus_template: nexus.service.template
  tasks:
    - name: Make sure all OS patches are applied
      shell: yum update -y
      become: True
      no_log: True

    - name: Check is java installed
      shell: java -version
      ignore_errors: True
      register: java_version

    - name: Install JDK
      yum: state=present name={{ package_name_jdk }}
      when: java_version is failed
      register: jdk_installed
      become: True
      no_log: True

    - name: Define JAVA_HOME directory
      shell: "{{ java_home_cmd }}"
      register: java_home_dir
      when: jdk_installed.changed == true

    - name: Configure JDK
      block:
        - shell: export JAVA_HOME={{ java_home_dir.stdout }}
        - lineinfile:
            path: /etc/profile
            state: present
            line: "export JAVA_HOME={{ java_home_dir.stdout }}"
      when: jdk_installed.changed == true
      become: True

    - name: Check Maven Dir Exists
      stat:
        path: "{{ maven_home }}"
      register: maven_link

    - name: Unpack Maven
      unarchive:
        src: http://www-eu.apache.org/dist/maven/maven-3/{{ maven_version }}/binaries/apache-maven-{{ maven_version }}-bin.tar.gz
        dest: "{{ maven_src }}"
        remote_src: yes
      when: maven_link.stat.exists == false
      become: True

    - name: Create Symlink For Maven
      file:
        path: "{{ maven_src }}/apache-maven-{{ maven_version }}"
        src: "{{ maven_src }}/apache-maven-{{ maven_version }}"
        dest: "{{ maven_home }}"
        state: link
        force: yes
      when: maven_link.stat.exists == false
      become: True

    - name: Configure Maven
      block:
        - file:
            path: "{{ maven_sh_path }}"
            state: touch
        - blockinfile:
            path:  "{{ maven_sh_path }}"
            state: present
            block: |
              export M2_HOME={{ maven_home }}
              export PATH=${M2_HOME}/bin:${PATH}
        - shell: source {{ maven_sh_path }}
      when: maven_link.stat.exists == false
      become: True

    - name: Create group
      group:
        name: "{{ nexus_group }}"
        state: present
      become: True

    - name: Add User
      user:
        name: "{{ nexus_user }}" #sudo useradd nexus
        group: "{{ nexus_group }}" #sudo chown nexus:nexus /opt/nexus -R
        state: present
        # home: /usr/local/nexus #sudo usermod -d /opt/nexus nexus
      become: True

    - name: Check Nexus Exists and Non-empty
      shell: if [ -d {{ nexus_home }} ]; then ls {{ nexus_home }}; fi;
      register: nexus_home_dir
      become: True

    - name: Create Nexus home
      file:
        path: "{{ nexus_home }}"
        state: directory
        owner: "{{ nexus_user }}"
        group: "{{ nexus_group }}"
      when: nexus_home_dir.stdout == ""
      become: True

    - name: Install Nexus
      unarchive:
        src: https://download.sonatype.com/nexus/{{ nexus_version }}/latest-unix.tar.gz
        dest: "{{ nexus_home }}"
        remote_src: yes
      when: nexus_home_dir.stdout == ""
      register: nexus_installed
      become: True

    - name: Set Nexus Folder Ownership
      shell: chown {{ nexus_user }}:{{ nexus_group }} {{ nexus_home }} -R
      when: nexus_installed.changed == true
      become: True

    - name: Get Nexus Full Version
      shell: cd {{ nexus_home }} && ls -d */ | grep 'nexus*' | sed 's#/##'
      when: nexus_installed.changed == true
      register: nexus_version_full

    - set_fact:
        nexus_version_full: "{{ nexus_version_full.stdout }}"
      when: nexus_installed.changed == true

    - name: Create Nexus Script
      template:
        src: "{{ nexus_template }}"
        dest: "{{ nexus_script }}"
      when: nexus_installed.changed == true
      become: True

    - name: Edit Nexusrc Configuration
      lineinfile:
        path: "{{ nexus_home }}/{{ nexus_version_full }}/bin/nexus.rc"
        state: present
        line: 'run_as_user="{{ nexus_user }}"'
      when: nexus_installed.changed == true
      notify:
        - Start Nexus
      become: True

  handlers:
    - name: Start Nexus
      service:
        enabled: yes
        name: nexus.service
        state: started
      become: True
      no_log: True
